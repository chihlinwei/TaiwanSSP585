lims <- c(-lim2, lim2); cols <- jet.colors3(7)}
# If color pallette is specified, use the specified color palette
if(is.null(colours)) cols <- cols else cols <- colours
# Plot raster layer
ggplot(dat) +
geom_raster(aes(x=x, y=y, fill=value))+
geom_polygon(data=land, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="yellow2")+
scale_fill_gradientn(colours=cols, limits=lims, na.value="white")+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill=NULL, title=parse(text=titles %>% as.character))+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'), plot.title = element_text(hjust=0.5))
}
basemap(cmip6_1950_2000_av)
basemap(cmip6_1950_2000_av)+facet_wrap(~var)
basemap <- function(r, titles=NULL, colours=NULL, ranges=c(0, 1)){
# Depth
bathy <- etopo2022 %>% raster::as.data.frame(xy = TRUE, na.rm = TRUE)
if(!is.data.frame(r)){
dat <- r %>% as.data.frame(xy = TRUE, na.rm = TRUE) %>% gather(-x, -y, key = "var", value = "value")
} else dat <- r
# Color key limits and colours
lim1 <- quantile(dat$value, ranges, na.rm=TRUE)
lim2 <- max(abs(quantile(dat$value, ranges, na.rm=TRUE)))
# If the raster only have positive values, use sequential color palettes
if(min(lim1) >= 0) {
lims <- lim1; cols <- jet.colors2(7)
# If the raster contains negative values, use diverging color palettes
} else {
lims <- c(-lim2, lim2); cols <- jet.colors3(7)}
# If color pallette is specified, use the specified color palette
if(is.null(colours)) cols <- cols else cols <- colours
# Plot raster layer
ggplot(dat) +
geom_raster(aes(x=x, y=y, fill=value))+
geom_polygon(data=land, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="yellow2")+
scale_fill_gradientn(colours=cols, limits=lims, na.value="white")+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill=NULL, title=parse(text=titles %>% as.character))+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'), plot.title = element_text(hjust=0.5))
}
basemap(cmip6_1950_2000_av)+facet_wrap(~var)
basemap(cmip6_1950_2000_av, titles="test")+facet_wrap(~var)
basemap(cmip6_1950_2000_av, titles="test")+facet_wrap(~var, scales = "free")
basemap(cmip6_1950_2000_av, titles="test")+facet_wrap(~var)
basemap(etopo2022)
?TaiwanSSP585
knitr::opts_chunk$set(
collapse = TRUE,
message=FALSE,
warning=FALSE,
comment = "#>"
)
library(TaiwanSSP585)
basemap(-etopo2022, title="Depth (m)", colours = terrain.colors(7))+
geom_sf(data=as(canyon, "sf"), size=2, colour="blue")+
geom_sf(data=as(seamount, "sf"), size=2, colour="green")+
geom_sf(data=as(vent, "sf"), size=2, colour="red")+
geom_sf(data=as(coral, "sf"), size=2, colour="black")
basemap(-etopo2022, title="Depth (m)", colours = terrain.colors(7))+
geom_sf(data=as(canyon, "sf"), size=2, colour="blue")+
geom_sf(data=as(seamount, "sf"), size=2, colour="green")+
geom_sf(data=as(vent, "sf"), size=2, colour="red")+
geom_sf(data=as(coral, "sf"), size=2, colour="black")
all <- overlay(subset(cmip6_extoe_constant, 1:4), fun=max) %>% mask(eez)
names(all) <- "cmip6_extoe_constant"
p1 <- basemap(r=all, title="When~climate~change>2*sigma", colours=brewer.pal(10, 'RdYlBu'))
# Violin plots
p2 <- ggplot(data=mask_habitat(all))+
geom_violin(aes(x=Habitat, y=value), scale = "width")+
labs(y="Time of Emergence of Climate Change")
p2+p1
knitr::opts_chunk$set(
collapse = TRUE,
message=FALSE,
warning=FALSE,
comment = "#>"
)
library(robis)
# Download OBIS data
po1 <- occurrence(scientificname = "Polychaeta", areaid = 34302)
po2 <- occurrence(scientificname = "Polychaeta", areaid = 34332)
sh1 <- occurrence(scientificname = "Alpheus", areaid = 34302)
sh2 <- occurrence(scientificname = "Alpheus", areaid = 34332)
# The Fish Database of Taiwan
fis <- cbind(coordinates(fish) %>% as.data.frame(), scientificName=fish$scientificName, Taxa="Fish")
# Combine all occurrence data
occ <- rbind(po1[, c(4:5, 7)] %>% cbind(Taxa="Polychaeta"),
po2[, c(4:5, 7)] %>% cbind(Taxa="Polychaeta"),
sh1[, c(4:5, 7)] %>% cbind(Taxa="Alpheus Shrimp"),
sh2[, c(4:5, 7)] %>% cbind(Taxa="Alpheus Shrimp"),
fis
)
occ <- subset(occ, decimalLatitude>=16.5 & decimalLatitude <=28 & decimalLongitude>=113.5 & decimalLongitude <=124.5)
library(knitr)
head(po1[, c(4:5, 7)]) %>% kable
basemap(-etopo2022, title="Depth (m)", colours = terrain.colors(7))+
geom_point(data=occ, aes(x=decimalLongitude, y=decimalLatitude), size=0.5)+
facet_wrap(~Taxa)
hist <- addLayer(etopo2022, cmip6_1950_2000_av)
names(hist)[-1] <- gsub("_av_1950_to_2000", "", names(cmip6_1950_2000_av))
proj1 <- addLayer(etopo2022, cmip6_2041_2060_av)
names(proj1)[-1] <- gsub("_av_2041_2060", "", names(cmip6_2041_2060_av))
proj2 <- addLayer(etopo2022, cmip6_2081_2100_av)
names(proj2)[-1] <- gsub("_av_2081_2100", "", names(cmip6_2081_2100_av))
library(dismo)
library(doBy)
# Split the occurrence dat by taxa into a list consisting of two sets of occurrence coordinates
# Conduct Mexent modeling on each set independently
r <- lapply(splitBy(~Taxa, occ), FUN = function(x){
# Covert the coordinates to spatial point dataframe
coordinates(x) <- c("decimalLongitude", "decimalLatitude")
# Maxnet modeling
me <-maxent(hist, x)
# Predict habitat suitability
out <- addLayer(predict(me, hist), predict(me, proj1), predict(me, proj2))
names(out) <- c("Y1950_2000", "Y2041_2060", "Y2081_2100")
return(out)
})
.jinit()
library(dismo)
library(doBy)
# Split the occurrence dat by taxa into a list consisting of two sets of occurrence coordinates
# Conduct Mexent modeling on each set independently
r <- lapply(splitBy(~Taxa, occ), FUN = function(x){
# Covert the coordinates to spatial point dataframe
coordinates(x) <- c("decimalLongitude", "decimalLatitude")
# Maxnet modeling
me <-maxent(hist, x)
# Predict habitat suitability
out <- addLayer(predict(me, hist), predict(me, proj1), predict(me, proj2))
names(out) <- c("Y1950_2000", "Y2041_2060", "Y2081_2100")
return(out)
})
r
knitr::opts_chunk$set(
collapse = TRUE,
message=FALSE,
warning=FALSE,
comment = "#>"
)
library(TaiwanSSP585)
library(robis)
# Download OBIS data
po1 <- occurrence(scientificname = "Polychaeta", areaid = 34302)
po2 <- occurrence(scientificname = "Polychaeta", areaid = 34332)
sh1 <- occurrence(scientificname = "Alpheus", areaid = 34302)
sh2 <- occurrence(scientificname = "Alpheus", areaid = 34332)
# The Fish Database of Taiwan
fis <- cbind(coordinates(fish) %>% as.data.frame(), scientificName=fish$scientificName, Taxa="Fish")
# Combine all occurrence data
occ <- rbind(po1[, c(4:5, 7)] %>% cbind(Taxa="Polychaeta"),
po2[, c(4:5, 7)] %>% cbind(Taxa="Polychaeta"),
sh1[, c(4:5, 7)] %>% cbind(Taxa="Alpheus Shrimp"),
sh2[, c(4:5, 7)] %>% cbind(Taxa="Alpheus Shrimp"),
fis
)
occ <- subset(occ, decimalLatitude>=16.5 & decimalLatitude <=28 & decimalLongitude>=113.5 & decimalLongitude <=124.5)
library(knitr)
head(po1[, c(4:5, 7)]) %>% kable
basemap(-etopo2022, title="Depth (m)", colours = terrain.colors(7))+
geom_point(data=occ, aes(x=decimalLongitude, y=decimalLatitude), size=0.5)+
facet_wrap(~Taxa)
hist <- addLayer(etopo2022, cmip6_1950_2000_av)
names(hist)[-1] <- gsub("_av_1950_to_2000", "", names(cmip6_1950_2000_av))
proj1 <- addLayer(etopo2022, cmip6_2041_2060_av)
names(proj1)[-1] <- gsub("_av_2041_2060", "", names(cmip6_2041_2060_av))
proj2 <- addLayer(etopo2022, cmip6_2081_2100_av)
names(proj2)[-1] <- gsub("_av_2081_2100", "", names(cmip6_2081_2100_av))
library(dismo)
library(doBy)
# Split the occurrence dat by taxa into a list consisting of two sets of occurrence coordinates
# Conduct Mexent modeling on each set independently
r <- lapply(splitBy(~Taxa, occ), FUN = function(x){
# Covert the coordinates to spatial point dataframe
coordinates(x) <- c("decimalLongitude", "decimalLatitude")
# Maxnet modeling
me <-maxent(hist, x)
# Predict habitat suitability
out <- addLayer(predict(me, hist), predict(me, proj1), predict(me, proj2))
names(out) <- c("Y1950_2000", "Y2041_2060", "Y2081_2100")
return(out)
})
raster::extract(hist, occ[,c("decimalLongitude", "decimalLatitude")]) %>% head(5) %>% kable(digits=3)
library(plyr)
# For each prediction raster brick, mask the raster layer by Argentina EEZ, convert the prediction raster into data frame, and then stack the data frame for ggplot
dat <- lapply(r, FUN=function(x){
x %>% as.data.frame(xy = TRUE, na.rm = TRUE) %>% gather(-x, -y, key = "var", value = "value")
}) %>% ldply(.id="Taxa")
dat$var <- factor(dat$var, labels=c("1951-2000", "2041-2060", "2081-2100"))
basemap(dat)
basemap(dat)+facet_grid(Taxa~var)
basemap(dat, titles = "Habitat~Sitability")+facet_grid(Taxa~var)
basemap(dat, title = "Habitat~Sitability")+facet_grid(Taxa~var)
basemap(dat, title = "Habitat~Sitability", colours=brewer.pal(10, 'RdYlBu') %>% rev)+facet_grid(Taxa~var)
basemap(dat, title = "Habitat~Sitability", colours=brewer.pal(10, 'RdYlBu') %>% rev)+
geom_point(data=occ, aes(x=decimalLongitude, y=decimalLatitude), size=0.2)+
facet_grid(Taxa~var)
knitr::opts_chunk$set(echo = TRUE)
var <- c("thetao", "epc100", "o2", "ph", "co3satcalc", "co3satarag", "co3", "calc", "arag")
bas1 <- c(rep("http://esgdata.gfdl.noaa.gov/thredds/fileServer/gfdl_dataroot4/ScenarioMIP/NOAA-GFDL/GFDL-ESM4/ssp585/r1i1p1f1/Omon/", 2),
rep("http://esgdata.gfdl.noaa.gov/thredds/fileServer/gfdl_dataroot4/ScenarioMIP/NOAA-GFDL/GFDL-ESM4/ssp585/r1i1p1f1/Oyr/", 7))
bas2 <- paste(var, "gr", c(rep("v20180701/", 2), rep("v20180701/", 7)), sep="/")
fre <- c(rep("_Omon_GFDL-ESM4_ssp585_r1i1p1f1_gr_", 2),
rep("_Oyr_GFDL-ESM4_ssp585_r1i1p1f1_gr_", 7))
mod <- paste(bas1, bas2, var, fre, sep="")
sta <- paste(seq(2015, 2095, by=20), "01", sep="")
end <- paste(c(seq(2034, 2094, by=20), 2100), "12", sep="")
t1 <- paste(sta, end, sep="-")
t2 <- "2015-2100"
urls <- NULL
destfiles <- NULL
for(i in 1:9){
if(i<=2) url <- paste(mod[i], t1, ".nc", sep="") else url <- paste(mod[i], t2, ".nc", sep="")
des <- paste("../ssp585/", var[i], "/GFDL-ESM4/", sep="")
urls <- c(urls, url)
destfiles <- c(destfiles, paste(des, basename(url), sep=""))
}
urls
destfiles
setwd("~/GitHub/TaiwanSSP585")
library(raster)
epc <- brick("G:/CMIP6_Taiwan/Raster/epcBottom/epcBottom_avg_ssp126.grd")
o2 <- brick("G:/CMIP6_Taiwan/Raster/o2Bottom/o2Bottom_avg_ssp126.grd")
ph <- brick("G:/CMIP6_Taiwan/Raster/phBottom/phBottom_avg_ssp126.grd")
thetao <- brick("G:/CMIP6_Taiwan/Raster/thetaoBottom/thetaoBottom_avg_ssp126.grd")
arag <- brick("G:/CMIP6_Taiwan/Raster/aragBottom/aragBottom_avg_ssp126.grd")
calc <- brick("G:/CMIP6_Taiwan/Raster/calcBottom/calcBottom_avg_ssp126.grd")
co3 <- brick("G:/CMIP6_Taiwan/Raster/co3Bottom/co3Bottom_avg_ssp126.grd")
co3satarag <- brick("G:/CMIP6_Taiwan/Raster/co3sataragBottom/co3sataragBottom_avg_ssp126.grd")
co3satcalc <- brick("G:/CMIP6_Taiwan/Raster/co3satcalcBottom/co3satcalcBottom_avg_ssp126.grd")
aragsat <- brick("G:/CMIP6_Taiwan/Raster/aragsatBottom/aragsatBottom_avg_ssp126.grd")
calcsat <- brick("G:/CMIP6_Taiwan/Raster/calcsatBottom/calcsatBottom_avg_ssp126.grd")
cmip6_1950_2014_av <- brick(subset(epc, 1), subset(o2, 1), subset(ph, 1), subset(thetao, 1),
subset(arag, 1), subset(calc, 1), subset(co3, 1), subset(co3satarag, 1), subset(co3satcalc, 1),
subset(aragsat, 1), subset(calcsat, 1))
save(cmip6_1950_2014_av, file="data/cmip6_1950_2014_av.rda")
cmip6_2041_2060_av <- brick(subset(epc, 2), subset(o2, 2), subset(ph, 2), subset(thetao, 2),
subset(arag, 2), subset(calc, 2), subset(co3, 2), subset(co3satarag, 2), subset(co3satcalc, 2),
subset(aragsat, 2), subset(calcsat, 2))
save(cmip6_2041_2060_av, file="data/cmip6_2041_2060_av.rda")
cmip6_2081_2100_av <- brick(subset(epc, 3), subset(o2, 3), subset(ph, 3), subset(thetao, 3),
subset(arag, 3), subset(calc, 3), subset(co3, 3), subset(co3satarag, 3), subset(co3satcalc, 3),
subset(aragsat, 3), subset(calcsat, 3))
save(cmip6_2081_2100_av, file="data/cmip6_2081_2100_av.rda")
cmip6_1950_2014_cv <- brick(subset(epc, 4), subset(o2, 4), subset(ph, 4), subset(thetao, 4),
subset(arag, 4), subset(calc, 4), subset(co3, 4), subset(co3satarag, 4), subset(co3satcalc, 4),
subset(aragsat, 4), subset(calcsat, 4))
save(cmip6_1950_2014_cv, file="data/cmip6_1950_2014_cv.rda")
cmip6_2041_2060_cv <- brick(subset(epc, 5), subset(o2, 5), subset(ph, 5), subset(thetao, 5),
subset(arag, 5), subset(calc, 5), subset(co3, 5), subset(co3satarag, 5), subset(co3satcalc, 5),
subset(aragsat, 5), subset(calcsat, 5))
save(cmip6_2041_2060_cv, file="data/cmip6_2041_2060_cv.rda")
cmip6_2081_2100_cv <- brick(subset(epc, 6), subset(o2, 6), subset(ph, 6), subset(thetao, 6),
subset(arag, 6), subset(calc, 6), subset(co3, 6), subset(co3satarag, 6), subset(co3satcalc, 6),
subset(aragsat, 6), subset(calcsat, 6))
save(cmip6_2081_2100_cv, file="data/cmip6_2081_2100_cv.rda")
cmip6_1950_2014_sd <- brick(subset(epc, 7), subset(o2, 7), subset(ph, 7), subset(thetao, 7),
subset(arag, 7), subset(calc, 7), subset(co3, 7), subset(co3satarag, 7), subset(co3satcalc, 7),
subset(aragsat, 7), subset(calcsat, 7))
save(cmip6_1950_2014_sd, file="data/cmip6_1950_2014_sd.rda")
cmip6_2041_2060_sd <- brick(subset(epc, 8), subset(o2, 8), subset(ph, 8), subset(thetao, 8),
subset(arag, 8), subset(calc, 8), subset(co3, 8), subset(co3satarag, 8), subset(co3satcalc, 8),
subset(aragsat, 8), subset(calcsat, 8))
save(cmip6_2041_2060_sd, file="data/cmip6_2041_2060_sd.rda")
cmip6_2081_2100_sd <- brick(subset(epc, 9), subset(o2, 9), subset(ph, 9), subset(thetao, 9),
subset(arag, 9), subset(calc, 9), subset(co3, 9), subset(co3satarag, 9), subset(co3satcalc, 9),
subset(aragsat, 9), subset(calcsat, 9))
save(cmip6_2081_2100_sd, file="data/cmip6_2081_2100_sd.rda")
cmip6_2041_2060_ch <- brick(subset(epc, 10), subset(o2, 10), subset(ph, 10), subset(thetao, 10),
subset(arag, 10), subset(calc, 10), subset(co3, 10), subset(co3satarag, 10), subset(co3satcalc, 10),
subset(aragsat, 10), subset(calcsat, 10))
save(cmip6_2041_2060_ch, file="data/cmip6_2041_2060_ch.rda")
cmip6_2081_2100_ch <- brick(subset(epc, 11), subset(o2, 11), subset(ph, 11), subset(thetao, 11),
subset(arag, 11), subset(calc, 11), subset(co3, 11), subset(co3satarag, 11), subset(co3satcalc, 11),
subset(aragsat, 11), subset(calcsat, 11))
save(cmip6_2081_2100_ch, file="data/cmip6_2081_2100_ch.rda")
cmip6_2041_2060_exsd <- brick(subset(epc, 12), subset(o2, 12), subset(ph, 12), subset(thetao, 12),
subset(arag, 12), subset(calc, 12), subset(co3, 12), subset(co3satarag, 12), subset(co3satcalc, 12),
subset(aragsat, 12), subset(calcsat, 12))
save(cmip6_2041_2060_exsd, file="data/cmip6_2041_2060_exsd.rda")
cmip6_2081_2100_exsd <- brick(subset(epc, 13), subset(o2, 13), subset(ph, 13), subset(thetao, 13),
subset(arag, 13), subset(calc, 13), subset(co3, 13), subset(co3satarag, 13), subset(co3satcalc, 13),
subset(aragsat, 13), subset(calcsat, 13))
save(cmip6_2081_2100_exsd, file="data/cmip6_2081_2100_exsd.rda")
cmip6_sdtoe_early <- brick(subset(epc, 14), subset(o2, 14), subset(ph, 14), subset(thetao, 14),
subset(arag, 14), subset(calc, 14), subset(co3, 14), subset(co3satarag, 14), subset(co3satcalc, 14),
subset(aragsat, 14), subset(calcsat, 14))
save(cmip6_sdtoe_early, file="data/cmip6_sdtoe_early.rda")
cmip6_sdtoe_constant <- brick(subset(epc, 15), subset(o2, 15), subset(ph, 15), subset(thetao, 15),
subset(arag, 15), subset(calc, 15), subset(co3, 15), subset(co3satarag, 15), subset(co3satcalc, 15),
subset(aragsat, 15), subset(calcsat, 15))
save(cmip6_sdtoe_constant, file="data/cmip6_sdtoe_constant.rda")
cmip6_extoe_early <- brick(subset(epc, 16), subset(o2, 16), subset(ph, 16), subset(thetao, 16),
subset(arag, 16), subset(calc, 16), subset(co3, 16), subset(co3satarag, 16), subset(co3satcalc, 16),
subset(aragsat, 16), subset(calcsat, 16))
save(cmip6_extoe_early, file="data/cmip6_extoe_early.rda")
cmip6_extoe_constant <- brick(subset(epc, 17), subset(o2, 17), subset(ph, 17), subset(thetao, 17),
subset(arag, 17), subset(calc, 17), subset(co3, 17), subset(co3satarag, 17), subset(co3satcalc, 17),
subset(aragsat, 17), subset(calcsat, 17))
save(cmip6_extoe_constant, file="data/cmip6_extoe_constant.rda")
cmip6_1950_2014_voccMeg <- brick(subset(epc, 18), subset(o2, 18), subset(ph, 18), subset(thetao, 18),
subset(arag, 18), subset(calc, 18), subset(co3, 18), subset(co3satarag, 18), subset(co3satcalc, 18),
subset(aragsat, 18), subset(calcsat, 18))
save(cmip6_1950_2014_voccMeg, file="data/cmip6_1950_2014_voccMeg.rda")
cmip6_2041_2060_voccMeg <- brick(subset(epc, 19), subset(o2, 19), subset(ph, 19), subset(thetao, 19),
subset(arag, 19), subset(calc, 19), subset(co3, 19), subset(co3satarag, 19), subset(co3satcalc, 19),
subset(aragsat, 19), subset(calcsat, 19))
save(cmip6_2041_2060_voccMeg, file="data/cmip6_2041_2060_voccMeg.rda")
cmip6_2081_2100_voccMeg <- brick(subset(epc, 20), subset(o2, 20), subset(ph, 20), subset(thetao, 20),
subset(arag, 20), subset(calc, 20), subset(co3, 20), subset(co3satarag, 20), subset(co3satcalc, 20),
subset(aragsat, 20), subset(calcsat, 20))
save(cmip6_2081_2100_voccMeg, file="data/cmip6_2081_2100_voccMeg.rda")
cmip6_1950_2014_voccAng <- brick(subset(epc, 21), subset(o2, 21), subset(ph, 21), subset(thetao, 21),
subset(arag, 21), subset(calc, 21), subset(co3, 21), subset(co3satarag, 21), subset(co3satcalc, 21),
subset(aragsat, 21), subset(calcsat, 21))
save(cmip6_1950_2014_voccAng, file="data/cmip6_1950_2014_voccAng.rda")
cmip6_2041_2060_voccAng <- brick(subset(epc, 22), subset(o2, 22), subset(ph, 22), subset(thetao, 22),
subset(arag, 22), subset(calc, 22), subset(co3, 22), subset(co3satarag, 22), subset(co3satcalc, 22),
subset(aragsat, 22), subset(calcsat, 22))
save(cmip6_2041_2060_voccAng, file="data/cmip6_2041_2060_voccAng.rda")
cmip6_2081_2100_voccAng <- brick(subset(epc, 23), subset(o2, 23), subset(ph, 23), subset(thetao, 23),
subset(arag, 23), subset(calc, 23), subset(co3, 23), subset(co3satarag, 23), subset(co3satcalc, 23),
subset(aragsat, 23), subset(calcsat, 23))
save(cmip6_2081_2100_voccAng, file="data/cmip6_2081_2100_voccAng.rda")
?cmip6_1950_2014_av
epc <- brick("G:/CMIP6_Taiwan/Raster/epcBottom/epcBottom_avg_ssp126.grd")
epc
names(epc)
source("~/GitHub/TaiwanSSP585/convert.R", echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
var <- c("thetao", "epc100", "o2", "ph", "co3satcalc", "co3satarag", "co3", "calc", "arag")
bas1 <- c(rep("http://esgdata.gfdl.noaa.gov/thredds/fileServer/gfdl_dataroot4/ScenarioMIP/NOAA-GFDL/GFDL-ESM4/ssp585/r1i1p1f1/Omon/", 2),
rep("http://esgdata.gfdl.noaa.gov/thredds/fileServer/gfdl_dataroot4/ScenarioMIP/NOAA-GFDL/GFDL-ESM4/ssp585/r1i1p1f1/Oyr/", 7))
bas2 <- paste(var, "gr", c(rep("v20180701/", 2), rep("v20180701/", 7)), sep="/")
fre <- c(rep("_Omon_GFDL-ESM4_ssp585_r1i1p1f1_gr_", 2),
rep("_Oyr_GFDL-ESM4_ssp585_r1i1p1f1_gr_", 7))
mod <- paste(bas1, bas2, var, fre, sep="")
sta <- paste(seq(2015, 2095, by=20), "01", sep="")
end <- paste(c(seq(2034, 2094, by=20), 2100), "12", sep="")
t1 <- paste(sta, end, sep="-")
t2 <- "2015-2100"
urls <- NULL
destfiles <- NULL
for(i in 1:9){
if(i<=2) url <- paste(mod[i], t1, ".nc", sep="") else url <- paste(mod[i], t2, ".nc", sep="")
des <- paste("../ssp585/", var[i], "/GFDL-ESM4/", sep="")
urls <- c(urls, url)
destfiles <- c(destfiles, paste(des, basename(url), sep=""))
}
urls
knitr::opts_chunk$set(
collapse = TRUE,
message=FALSE,
warning=FALSE,
comment = "#>"
)
sta <- paste(seq(2015, 2095, by=20), "01", sep="")
end <- paste(c(seq(2034, 2094, by=20), 2100), "12", sep="")
t1 <- paste(sta, end, sep="-")
t1
sta <- paste(seq(2015, 2095, by=20), "01", sep="")
end <- paste(c(seq(2034, 2094, by=20), 2100), "12", sep="")
time <- paste(sta, end, sep="-")
paste(var, time, ".nc", sep="")
var <- "http://esgdata.gfdl.noaa.gov/thredds/fileServer/gfdl_dataroot4/ScenarioMIP/NOAA-GFDL/GFDL-ESM4/ssp585/r1i1p1f1/Omon/thetao/gr/v20180701/thetao_Omon_GFDL-ESM4_ssp585_r1i1p1f1_gr_"
sta <- paste(seq(2015, 2095, by=20), "01", sep="")
end <- paste(c(seq(2034, 2094, by=20), 2100), "12", sep="")
time <- paste(sta, end, sep="-")
paste(var, time, ".nc", sep="")
basenames(urls)
basename(urls)
des <- "C:/Users/user/Downloads"
paste(des, basename(urls), sep="")
des <- "C:/Users/user/Downloads/"
paste(des, basename(urls), sep="")
var <- "http://esgdata.gfdl.noaa.gov/thredds/fileServer/gfdl_dataroot4/ScenarioMIP/NOAA-GFDL/GFDL-ESM4/ssp585/r1i1p1f1/Omon/thetao/gr/v20180701/thetao_Omon_GFDL-ESM4_ssp585_r1i1p1f1_gr_"
sta <- paste(seq(2015, 2095, by=20), "01", sep="")
end <- paste(c(seq(2034, 2094, by=20), 2100), "12", sep="")
time <- paste(sta, end, sep="-")
urls <- paste(var, time, ".nc", sep="")
urls
des <- "C:/Users/user/Downloads/"
paste(des, basename(urls), sep="")
sta
# Source file urls
sta <- paste(seq(2015, 2095, by=20), "01", sep="")
end <- paste(c(seq(2034, 2094, by=20), 2100), "12", sep="")
time <- paste(sta, end, sep="-")
urls <- paste(var, time, ".nc", sep="")
# Path to save the files
destfiles <- paste("C:/Users/user/Downloads/", basename(urls), sep="")
# Download CMIP6 data
download.file(url = urls, destfile = destfiles, mode = "wb")
?download.file
# Download CMIP6 data
for(i in 1:5) download.file(url = urls[1], destfile = destfiles[1], mode = "wb")
options(timeout=3000)
download_until_success <- function(url, destfile, ..., maxcount = 5) {
if (file.exists(destfile)) {
message(paste0(destfile, '\tFile already exists'),
appendLF = TRUE)
} else {
ntry <- 0L
repeat{
Sys.sleep(0.5)
fl <- tryCatch(download.file(url, destfile, mode = "wb", ...), error = function(e)e)
not.yet <- inherits(fl, "error")
if(not.yet) Sys.sleep(3) else break
ntry <- ntry + 1L
if(ntry>=maxcount){
msg <- paste0(url, "\tReached max tries ", ntry)
message(msg, appendLF = TRUE)}
break
}
}
}
# Download CMIP6 data
for(i in 1:5) download_until_success(url = urls[1], destfile = destfiles[1], mode = "wb")
# Download CMIP6 data
for(i in 1:5) download_until_success(url = urls[1], destfile = destfiles[1], mode = "wb")
?download.file
# Download CMIP6 data
for(i in 1:5) download.file(url = urls[1], destfile = destfiles[1], mode = "wb")
urls
fil <- dir("C:/Users/user/Downloads/", full.names = TRUE, pattern = ".nc")
fil
destfile
# Source file urls
url <- "http://esgdata.gfdl.noaa.gov/thredds/fileServer/gfdl_dataroot4/ScenarioMIP/NOAA-GFDL/GFDL-ESM4/ssp585/r1i1p1f1/Omon/thetao/gr/v20180701/thetao_Omon_GFDL-ESM4_ssp585_r1i1p1f1_gr_201501-203412.nc"
# Path to save the files
destfile <- paste("C:/Users/user/Downloads/", basename(url), sep="")
destfile
ncvar_get(destfile, "thetao")
library(ncdf4)
library(scmisc)
keep_b
ncvar_get(destfile, "thetao")
destfile
fil
ncvar_get(destfile, "thetao")
dim(ncvar_get(destfile, "thetao"))
ncvar_get(destfile, "thetao")
# Source file urls
url <- "http://esgdata.gfdl.noaa.gov/thredds/fileServer/gfdl_dataroot4/ScenarioMIP/NOAA-GFDL/GFDL-ESM4/ssp585/r1i1p1f1/Omon/thetao/gr/v20180701/thetao_Omon_GFDL-ESM4_ssp585_r1i1p1f1_gr_201501-203412.nc"
# Path to save the files
destfile <- paste("C:/Users/user/Downloads/", basename(url), sep="")
ncvar_get(destfile, "thetao")
library(ncdf4)
library(scmisc)
m <- nc_open(destfile)
dim(ncvar_get(m, "thetao"))
# Seasurface temperature
thetao203412 <- nc_open(destfile) %>% ncvar_get("thetao")[,,1,240]
# Seasurface temperature
m <- nc_open(destfile) %>% ncvar_get("thetao")
# Seasurface temperature
m <- nc_open(destfile) %>% ncvar_get("thetao")
# Keep bottom most layer
sst <- ncvar_get(m, "thetao")[,,1,240]
# Keep bottom most layer
thetao <- ncvar_get(m, "thetao")
# Seasurface temperature
m <- nc_open(destfile)
# Keep bottom most layer
thetao <- ncvar_get(m, "thetao")
dim(thetao)
# Convert to latlon projection
y <- as.vector(ncvar_get(m1, "lat"))
# Convert to latlon projection
y <- as.vector(ncvar_get(m, "lat"))
x <- as.vector(ncvar_get(m, "lon"))
x[x>180] <- x[x>180]-360
x <- rep(x, 180)
y <- rep(y, each=360)
dat <- na.omit(data.frame(cbind(x, y, sst=thetao[,,1,240])))
head(dat)
x
y
thetao[,,1,240]
dim(thetao)
thetao[, , 1, 240]
dim(thetao[, , 1, 240])
dat <- na.omit(data.frame(cbind(x, y, sst=as.vector(thetao[,,1,240]))))
head(dat)
dat <- na.omit(data.frame(cbind(x, y, value=as.vector(thetao[,,1,240]))))
basemap(dat)
basemap(dat, title="Sea~Surface~Temperature")
basemap(dat, title="Sea~Surface~Temperature")
basemap(dat, title="Sea~Surface~Temperature~(degree~C)")
basemap(dat, title="203412~Sea~Surface~Temperature~(degree~C)")
basemap(dat, title="2034~Dec~Sea~Surface~Temperature~(degree~C)")
basemap(dat, title="Dec~2034~Sea~Surface~Temperature~(degree~C)")
# Keep bottom most layer
thetao <- ncvar_get(m, "thetao") %>% keep_b
keep_b
library(abind)
# Keep bottom most layer
thetao <- ncvar_get(m, "thetao") %>% keep_b
dim(thetao)
dat <- na.omit(data.frame(cbind(x, y, value=thetao[,,240] )))
basemap(dat, title="Dec~2034~Sea~Surface~Temperature~(degree~C)")
dat <- na.omit(data.frame(cbind(x, y, value=thetao[,,240] %>% as.vector )))
basemap(dat, title="Dec~2034~Sea~Surface~Temperature~(degree~C)")
basemap(dat, title="Dec~2034~Seafloor~Temperature~(degree~C)")
