scale_fill_gradientn(colours=brewer.pal(10, 'RdYlBu') %>% rev, na.value="white")+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill="Habitat\nSuitability")+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'))
ggplot(dat) +
geom_raster(aes(x=x, y=y, fill=value))+
geom_polygon(data=land, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
#geom_point(data=occ, aes(x=decimalLongitude, y=decimalLatitude), size=0.2)+
facet_grid(var~Taxa)+
scale_fill_gradientn(colours=brewer.pal(10, 'RdYlBu') %>% rev, na.value="white")+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill="Habitat\nSuitability")+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'))
ggplot(dat) +
geom_raster(aes(x=x, y=y, fill=value))+
geom_polygon(data=land, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
#geom_point(data=occ, aes(x=decimalLongitude, y=decimalLatitude), size=0.2)+
facet_grid(Taxa~var)+
scale_fill_gradientn(colours=brewer.pal(10, 'RdYlBu') %>% rev, na.value="white")+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill="Habitat\nSuitability")+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'))
ggplot(dat) +
geom_raster(aes(x=x, y=y, fill=value))+
geom_polygon(data=land, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
#geom_point(data=occ, aes(x=decimalLongitude, y=decimalLatitude), size=0.2)+
facet_grid(Taxa~var)+
scale_fill_gradientn(colours=brewer.pal(10, 'RdYlBu') %>% rev, na.value="white")+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill="Habitat\nSuitability")+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'))
library(plyr)
# For each prediction raster brick, mask the raster layer by Argentina EEZ, convert the prediction raster into data frame, and then stack the data frame for ggplot
dat <- lapply(r, FUN=function(x){
x %>% as.data.frame(xy = TRUE, na.rm = TRUE) %>% gather(-x, -y, key = "var", value = "value")
}) %>% ldply(.id="Taxa")
dat$var <- factor(dat$var, labels=c("1950-2000", "2041-2060", "2081-2100"))
ggplot(dat) +
geom_raster(aes(x=x, y=y, fill=value))+
geom_polygon(data=land, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
#geom_point(data=occ, aes(x=decimalLongitude, y=decimalLatitude), size=0.2)+
facet_grid(Taxa~var)+
scale_fill_gradientn(colours=brewer.pal(10, 'RdYlBu') %>% rev, na.value="white")+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill="Habitat\nSuitability")+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'))
library(plyr)
# For each prediction raster brick, mask the raster layer by Argentina EEZ, convert the prediction raster into data frame, and then stack the data frame for ggplot
dat <- lapply(r, FUN=function(x){
x %>% as.data.frame(xy = TRUE, na.rm = TRUE) %>% gather(-x, -y, key = "var", value = "value")
}) %>% ldply(.id="Taxa")
dat$var <- factor(dat$var, labels=c("1951-2000", "2041-2060", "2081-2100"))
ggplot(dat) +
geom_raster(aes(x=x, y=y, fill=value))+
geom_polygon(data=land, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
#geom_point(data=occ, aes(x=decimalLongitude, y=decimalLatitude), size=0.2)+
facet_grid(Taxa~var)+
scale_fill_gradientn(colours=brewer.pal(10, 'RdYlBu') %>% rev, na.value="white")+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill="Habitat\nSuitability")+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'))
library(plyr)
# For each prediction raster brick, mask the raster layer by Argentina EEZ, convert the prediction raster into data frame, and then stack the data frame for ggplot
dat <- lapply(r, FUN=function(x){
x %>% as.data.frame(xy = TRUE, na.rm = TRUE) %>% gather(-x, -y, key = "var", value = "value")
}) %>% ldply(.id="Taxa")
dat$var <- factor(dat$var, labels=c("1951-2000", "2041-2060", "2081-2100"))
ggplot(dat) +
geom_raster(aes(x=x, y=y, fill=value))+
geom_polygon(data=land, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
#geom_point(data=occ, aes(x=decimalLongitude, y=decimalLatitude), size=0.2)+
facet_grid(Taxa~var)+
scale_fill_gradientn(colours=brewer.pal(10, 'RdYlBu') %>% rev, na.value="white")+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill="Habitat\nSuitability")+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'))
bathy <- etopo2022 %>% as.data.frame(xy = TRUE, na.rm= TRUE)
ggplot(bathy) +
geom_raster(aes(x=x, y=y, fill=-layer))+
geom_polygon(data=land, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
geom_point(data=occ, aes(x=decimalLongitude, y=decimalLatitude), size=0.5)+
facet_wrap(~Taxa)+
scale_fill_gradientn(colours=terrain.colors(7), na.value="white")+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill="Depth\n(m)")+
theme_bw() %+replace% theme(legend.position = "right", legend.key.width =  unit(0.5, 'cm'),
strip.background = element_blank())
bathy <- etopo2022 %>% as.data.frame(xy = TRUE, na.rm= TRUE)
ggplot(bathy) +
geom_raster(aes(x=x, y=y, fill=-layer))+
geom_polygon(data=land, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
geom_point(data=occ, aes(x=decimalLongitude, y=decimalLatitude), size=0.5)+
facet_wrap(~Taxa)+
scale_fill_gradientn(colours=terrain.colors(7), na.value="white")+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill="Depth\n(m)")+
theme_bw() %+replace% theme(legend.position = "right", legend.key.width =  unit(0.5, 'cm'),
strip.background = element_blank())
library(dismo)
library(doBy)
# Split the occurrence dat by taxa into a list consisting of two sets of occurrence coordinates
# Conduct Mexent modeling on each set independently
r <- lapply(splitBy(~Taxa, occ), FUN = function(x){
# Covert the coordinates to spatial point dataframe
coordinates(x) <- c("decimalLongitude", "decimalLatitude")
# Maxnet modeling
me <-maxent(hist, x)
# Predict habitat suitability
out <- addLayer(predict(me, hist), predict(me, proj1), predict(me, proj2))
names(out) <- c("Y1950_2000", "Y2041_2060", "Y2081_2100")
return(out)
})
setwd("~/GitHub/TaiwanSSP585/tutorials")
knitr::opts_chunk$set(
collapse = TRUE,
message=FALSE,
warning=FALSE,
comment = "#>"
)
library(TaiwanSSP585)
library(ggplot2)
library(dplyr)
library(patchwork)
library(tidyr)
library(RColorBrewer)
library(sf)
library(raster)
library(ncdf4)
library(PBSmapping)
library(scmisc)
nc <- nc_open("../../CMIP6 - Copy/ETOPO1/ETOPO_2022_v1_60s_N90W180_bed.nc")
setwd("G:/CMIP6_Taiwan/ETOPO1")
library(raster)
library(ncdf4)
library(PBSmapping)
library(scmisc)
nc <- nc_open("../../CMIP6 - Copy/ETOPO1/ETOPO_2022_v1_60s_N90W180_bed.nc")
ng <- ncvar_get(nc, varid = "z")
relief <- raster(t(ng[,10800:1]), xmn=-180, xmx=180, ymn=-90, ymx=90, crs = "+proj=longlat +datum=WGS84")
nc_close(nc)
ex <- extent(c(113.5, 124.5, 16.5, 28))
taiwanEEZ <- crop(relief, ex)
small <- aggregate(taiwanEEZ, 15)
small <- calc(small, fun=function(x){
x[x>0] <- NA
return(x)
})
#writeRaster(small, "ETOPO1_Ice_c_geotiff_small.tif", overwrite=TRUE)
etopo2022 <- small
#save(etopo2022, file="etopo2022.rda")
# Taiwan coastline polygon
land<- importGSHHS("gshhs_i.b", xlim=c(113.5, 124.5), ylim=c(16.5, 28), maxLevel=1)
plotMap(land)
#save(land, file="land.rda")
# Taiwan EEZ polygon
# https://marineregions.org/gazetteer.php?p=details&id=8321
eez <- shapefile("eez/eez.shp")
#save(eez, file="eez.rda")
# Submarine canyon
canyon <- crop(canyon, ex)
#save(canyon, file="canyon.rda")
# Seamount
seamount <- crop(seamount, ex)
#save(seamount, file="seamount.rda")
# Vent
# https://rmi-data.sprep.org/dataset/global-distribution-hydrothermal-vent-fields-2020-interridge-global-database-active
# https://doi.pangaea.de/10.1594/PANGAEA.917894
vent <- shapefile("Global_2020_HydrothermalVents_InterRidgeVentsDatabasev3.4_41/Global_2020_HydrothermalVents_InterRidgeVentsDatabasev3.4.shp")
vent <- crop(vent, ex)
#save(vent, file="vent.rda")
# Fish
# GBIF.org (10 September 2024) GBIF Occurrence Download https://doi.org/10.15468/dl.e57g23
read.csv("0009978-240906103802322/0009978-240906103802322.csv")
# Fish
# GBIF.org (10 September 2024) GBIF Occurrence Download https://doi.org/10.15468/dl.e57g23
fish <- read.csv("0009978-240906103802322/0009978-240906103802322.csv")
dim(fish)
dir()
dir("0009978-240906103802322")
# Fish
# GBIF.org (10 September 2024) GBIF Occurrence Download https://doi.org/10.15468/dl.e57g23
fish <- read.csv("0009978-240906103802322/0009978-240906103802322.csv")
?read.csv
# Fish
# GBIF.org (10 September 2024) GBIF Occurrence Download https://doi.org/10.15468/dl.e57g23
fish <- read.csv2("0009978-240906103802322/0009978-240906103802322.csv")
# Fish
# GBIF.org (10 September 2024) GBIF Occurrence Download https://doi.org/10.15468/dl.e57g23
fish <- read.delim("0009978-240906103802322/0009978-240906103802322.csv")
dim(fish)
head(fish)
names(fish)
fish$locality
names(fish)
fish$depth
range(fish$depth)
range(fish$depth, na.rm=T)
names(fish)
fish$occurrenceStatus
fish$occurrenceStatus %>% unique
fish$elevation
fish$decimalLatitude
names(fish)
fish <- subset(!is.na(decimalLatitude))
fish <- subset(fish, !is.na(decimalLatitude))
dim(fish)
coordinates(fish) <- c("decimalLongitude", "decimalLatitude")
plot(fish)
plot(etopo2022)
fish %>% mask(etopo2022)
?intersect
intersect(fish, etopo2022)
intersect(etopo2022, fish)
?mask
?extract
extract(etopo2022, fish)
fish
extract(etopo2022, fish)
raster::extract(etopo2022, fish)
fish[!is.na(raster::extract(etopo2022, fish)),]
fish <- fish[!is.na(raster::extract(etopo2022, fish)),]
dim(fish)
plot(fish)
etopo2022
etopo2022[layer<-100]
clac(etop2022, FUN=function(x)x[x>-100] <- NA; return(c))
clac(etop2022, FUN=function(x)x[x>-100] <- NA; return(x))
calc(etop2022, FUN=function(x)x[x>-100] <- NA; return(x))
calc(etop2022, FUN=function(x){x[x>-100] <- NA; return(x)})
calc(etopo2022, FUN=function(x){x[x>-100] <- NA; return(x)})
mask <- calc(etopo2022, fun=function(x){
x[x>-100] <- NA
return(x)
})
plot(mask)
mask <- calc(etopo2022, fun=function(x){
x[x>-50] <- NA
return(x)
})
plot(mask)
mask <- calc(etopo2022, fun=function(x){
x[x>-20] <- NA
return(x)
})
plot(mask)
coordinates(fish) <- c("decimalLongitude", "decimalLatitude")
fish <- fish[!is.na(raster::extract(mask, fish)),]
# Fish
# GBIF.org (10 September 2024) GBIF Occurrence Download https://doi.org/10.15468/dl.e57g23
fish <- read.delim("0009978-240906103802322/0009978-240906103802322.csv")
fish <- subset(fish, !is.na(decimalLatitude))
coordinates(fish) <- c("decimalLongitude", "decimalLatitude")
mask <- calc(etopo2022, fun=function(x){
x[x>-20] <- NA
return(x)
})
fish <- fish[!is.na(raster::extract(mask, fish)),]
plot(fish)
# Fish
# GBIF.org (10 September 2024) GBIF Occurrence Download https://doi.org/10.15468/dl.e57g23
fish <- read.delim("0009978-240906103802322/0009978-240906103802322.csv")
fish <- subset(fish, !is.na(decimalLatitude))
coordinates(fish) <- c("decimalLongitude", "decimalLatitude")
mask <- calc(etopo2022, fun=function(x){
x[x>-100] <- NA
return(x)
})
fish <- fish[!is.na(raster::extract(mask, fish)),]
plot(fish)
# Fish
# GBIF.org (10 September 2024) GBIF Occurrence Download https://doi.org/10.15468/dl.e57g23
fish <- read.delim("0009978-240906103802322/0009978-240906103802322.csv")
fish <- subset(fish, !is.na(decimalLatitude))
coordinates(fish) <- c("decimalLongitude", "decimalLatitude")
mask <- calc(etopo2022, fun=function(x){
x[x>-50] <- NA
return(x)
})
fish <- fish[!is.na(raster::extract(mask, fish)),]
plot(fish)
fish <- read.delim("0009978-240906103802322/0009978-240906103802322.csv")
fish <- subset(fish, !is.na(decimalLatitude))
coordinates(fish) <- c("decimalLongitude", "decimalLatitude")
plot(fish)
# Fish
# GBIF.org (10 September 2024) GBIF Occurrence Download https://doi.org/10.15468/dl.e57g23
fish <- read.delim("0009978-240906103802322/0009978-240906103802322.csv")
fish <- subset(fish, !is.na(decimalLatitude))
coordinates(fish) <- c("decimalLongitude", "decimalLatitude")
mask <- calc(etopo2022, fun=function(x){
x[x>-50] <- NA
return(x)
})
fish <- fish[!is.na(raster::extract(mask, fish)),]
plot(fish)
dim(fish)
head(fish)
# The Fish Database of Taiwan
# https://www.gbif.org/dataset/b7dd8170-98a0-11de-b4d9-b8a03c50a862
# GBIF.org (10 September 2024) GBIF Occurrence Download https://doi.org/10.15468/dl.e57g23
fish <- read.delim("0009978-240906103802322/0009978-240906103802322.csv")
fish <- subset(fish, !is.na(decimalLatitude))
coordinates(fish) <- c("decimalLongitude", "decimalLatitude")
# Remove shallow water reef fish
mask <- calc(etopo2022, fun=function(x){
x[x>-40] <- NA
return(x)
})
fish <- fish[!is.na(raster::extract(mask, fish)),]
save(fish, file="fish.rda")
fish_encounters
fish
names(fish)
coordinates(fish)
fish$scientificName
load("G:/CMIP6_Taiwan/ETOPO1/fish.rda")
knitr::opts_chunk$set(
collapse = TRUE,
message=FALSE,
warning=FALSE,
comment = "#>"
)
library(TaiwanSSP585)
library(ggplot2)
library(dplyr)
library(tidyr)
library(RColorBrewer)
library(sf)
names(coordinates(fish))
coordinates(fish)
cbind(coordinates(fish), scientificName=fish$scientificName)
cbind(coordinates(fish) %>% as.data.frame(), scientificName=fish$scientificName)
library(robis)
# Download OBIS data
po1 <- occurrence(scientificname = "Polychaeta", areaid = 34302)
po2 <- occurrence(scientificname = "Polychaeta", areaid = 34332)
sh1 <- occurrence(scientificname = "Alpheus", areaid = 34302)
sh2 <- occurrence(scientificname = "Alpheus", areaid = 34332)
names(po1)
# The Fish Database of Taiwan
fis <- cbind(coordinates(fish) %>% as.data.frame(), scientificName=fish$scientificName, Taxa="Fish")
head(fis)
# Combine all occurrence data
occ <- rbind(po1[, c(4:5, 7)] %>% cbind(Taxa="Polychaeta"),
po2[, c(4:5, 7)] %>% cbind(Taxa="Polychaeta"),
sh1[, c(4:5, 7)] %>% cbind(Taxa="Alpheus Shrimp"),
sh2[, c(4:5, 7)] %>% cbind(Taxa="Alpheus Shrimp"),
fis
)
occ <- subset(occ, decimalLatitude>=16.5 & decimalLatitude <=28 & decimalLongitude>=113.5 & decimalLongitude <=124.5)
bathy <- etopo2022 %>% as.data.frame(xy = TRUE, na.rm= TRUE)
ggplot(bathy) +
geom_raster(aes(x=x, y=y, fill=-layer))+
geom_polygon(data=land, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
geom_point(data=occ, aes(x=decimalLongitude, y=decimalLatitude), size=0.5)+
facet_wrap(~Taxa)+
scale_fill_gradientn(colours=terrain.colors(7), na.value="white")+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill="Depth\n(m)")+
theme_bw() %+replace% theme(legend.position = "right", legend.key.width =  unit(0.5, 'cm'),
strip.background = element_blank())
hist <- addLayer(etopo2022, cmip6_1950_2000_av)
names(hist)[-1] <- gsub("_av_1950_to_2000", "", names(cmip6_1950_2000_av))
proj1 <- addLayer(etopo2022, cmip6_2041_2060_av)
names(proj1)[-1] <- gsub("_av_2041_2060", "", names(cmip6_2041_2060_av))
proj2 <- addLayer(etopo2022, cmip6_2081_2100_av)
names(proj2)[-1] <- gsub("_av_2081_2100", "", names(cmip6_2081_2100_av))
library(dismo)
library(doBy)
# Split the occurrence dat by taxa into a list consisting of two sets of occurrence coordinates
# Conduct Mexent modeling on each set independently
r <- lapply(splitBy(~Taxa, occ), FUN = function(x){
# Covert the coordinates to spatial point dataframe
coordinates(x) <- c("decimalLongitude", "decimalLatitude")
# Maxnet modeling
me <-maxent(hist, x)
# Predict habitat suitability
out <- addLayer(predict(me, hist), predict(me, proj1), predict(me, proj2))
names(out) <- c("Y1950_2000", "Y2041_2060", "Y2081_2100")
return(out)
})
library(dismo)
library(doBy)
# Split the occurrence dat by taxa into a list consisting of two sets of occurrence coordinates
# Conduct Mexent modeling on each set independently
r <- lapply(splitBy(~Taxa, occ), FUN = function(x){
# Covert the coordinates to spatial point dataframe
coordinates(x) <- c("decimalLongitude", "decimalLatitude")
# Maxnet modeling
me <-maxent(hist, x)
# Predict habitat suitability
out <- addLayer(predict(me, hist), predict(me, proj1), predict(me, proj2))
names(out) <- c("Y1950_2000", "Y2041_2060", "Y2081_2100")
return(out)
})
hist <- addLayer(etopo2022, cmip6_1950_2000_av)
names(hist)[-1] <- gsub("_av_1950_to_2000", "", names(cmip6_1950_2000_av))
proj1 <- addLayer(etopo2022, cmip6_2041_2060_av)
names(proj1)[-1] <- gsub("_av_2041_2060", "", names(cmip6_2041_2060_av))
proj2 <- addLayer(etopo2022, cmip6_2081_2100_av)
names(proj2)[-1] <- gsub("_av_2081_2100", "", names(cmip6_2081_2100_av))
splitBy(~Taxa, occ)
x=splitBy(~Taxa, occ)[[1]]
# Covert the coordinates to spatial point dataframe
coordinates(x) <- c("decimalLongitude", "decimalLatitude")
# Maxnet modeling
me <-maxent(hist, x)
.jinit()
.jcheck(silent = TRUE)
bathy <- etopo2022 %>% as.data.frame(xy = TRUE, na.rm= TRUE)
ggplot(bathy) +
geom_raster(aes(x=x, y=y, fill=-layer))+
geom_polygon(data=land, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
geom_point(data=occ, aes(x=decimalLongitude, y=decimalLatitude), size=0.5)+
facet_wrap(~Taxa)+
scale_fill_gradientn(colours=terrain.colors(7), na.value="white")+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill="Depth\n(m)")+
theme_bw() %+replace% theme(legend.position = "right", legend.key.width =  unit(0.5, 'cm'),
strip.background = element_blank())
bathy <- etopo2022 %>% as.data.frame(xy = TRUE, na.rm= TRUE)
ggplot(bathy) +
geom_raster(aes(x=x, y=y, fill=-layer))+
geom_polygon(data=land, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
geom_point(data=occ, aes(x=decimalLongitude, y=decimalLatitude), size=0.5)+
facet_wrap(~Taxa)+
scale_fill_gradientn(colours=terrain.colors(7), na.value="white")+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill="Depth\n(m)")+
theme_bw() %+replace% theme(legend.position = "right", legend.key.width =  unit(0.5, 'cm'),
strip.background = element_blank())
plot(vent)
# Vent
# https://rmi-data.sprep.org/dataset/global-distribution-hydrothermal-vent-fields-2020-interridge-global-database-active
# https://doi.pangaea.de/10.1594/PANGAEA.917894
vent <- shapefile("Global_2020_HydrothermalVents_InterRidgeVentsDatabasev3.4_41/Global_2020_HydrothermalVents_InterRidgeVentsDatabasev3.4.shp")
dim(vent)
plot(vent)
# The Fish Database of Taiwan
# https://www.gbif.org/dataset/b7dd8170-98a0-11de-b4d9-b8a03c50a862
# GBIF.org (10 September 2024) GBIF Occurrence Download https://doi.org/10.15468/dl.e57g23
fish <- read.delim("0009978-240906103802322/0009978-240906103802322.csv")
dim(fish)
?TaiwanSSP585
fish
# The Fish Database of Taiwan
# https://www.gbif.org/dataset/b7dd8170-98a0-11de-b4d9-b8a03c50a862
# GBIF.org (10 September 2024) GBIF Occurrence Download https://doi.org/10.15468/dl.e57g23
fish <- read.delim("0009978-240906103802322/0009978-240906103802322.csv")
fish <- subset(fish, !is.na(decimalLatitude))
coordinates(fish) <- c("decimalLongitude", "decimalLatitude")
# Remove shallow water reef fish
mask <- calc(etopo2022, fun=function(x){
x[x>-40] <- NA
return(x)
})
fish <- fish[!is.na(raster::extract(mask, fish)),]
fish
projection(fish) <- projection(eez)
save(fish, file="fish.rda")
vent
?TaiwanSSP585
?TaiwanSSP585
library(TaiwanSSP585)
?TaiwanSSP585
library(TaiwanSSP585)
?TaiwanSSP585
