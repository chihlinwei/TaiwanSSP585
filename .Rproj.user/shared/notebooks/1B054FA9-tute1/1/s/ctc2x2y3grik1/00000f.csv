"0","plot_fun <- function(r, vt=names(r), colours=NULL, q_limits=c(0.001, 0.999)){"
"0","  "
"0","  # Convert raster to data frame and then to list"
"0","  cmip6 <- raster::as.data.frame(r, xy = TRUE, na.rm = TRUE) %>%"
"0","  gather(-x, -y, key = ""var"", value = ""value"", factor_key = TRUE)"
"0","  cmip6$var <- factor(cmip6$var, labels = vt)"
"0","  cmip6_list <- cmip6 %>% group_split(var)"
"0","  "
"0","  # Depth"
"0","  bathy <- etopo2022%>% raster::as.data.frame(xy = TRUE, na.rm = TRUE)"
"0","  "
"0","  # ggolot list"
"0","  gg_list = lapply(cmip6_list, function(dat) {"
"0","    "
"0","    # Color key limits and colours"
"0","    lim1 <- quantile(dat$value, q_limits, na.rm=TRUE)"
"0","    lim2 <- max(abs(quantile(dat$value, q_limits, na.rm=TRUE)))"
"0","    # If the raster only have positive values, use sequential color palettes"
"0","    if(min(lim1) >= 0) {"
"0","      lims <- lim1; cols <- jet.colors2(7)"
"0","    # If the raster contains negative values, use diverging color palettes"
"0","    } else {"
"0","      lims <- c(-lim2, lim2); cols <- jet.colors3(7)}"
"0","    # If color pallette is specified, use the specified color palette"
"0","    if(is.null(colours)) cols <- cols else cols <- colours"
"0","      "
"0","    # Plot raster layer"
"0","    ggplot(dat) +"
"0","      geom_raster(aes(x=x, y=y, fill=value))+"
"0","      geom_polygon(data=land, aes(x=X, y=Y, group=PID), fill=""bisque2"", colour=""transparent"")+"
"0","      geom_sf(data=as(eez, ""sf""), fill=""transparent"", colour=""red"")+"
"0","      geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour=""gray50"")+"
"0","      geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour=""gray50"")+"
"0","      scale_fill_gradientn(colours=cols, limits=lims, na.value=""white"")+"
"0","      scale_x_continuous(expand = expansion(mult = 0))+"
"0","      scale_y_continuous(expand = expansion(mult = 0))+"
"0","      labs(x=NULL, y=NULL, fill=NULL, title=parse(text=dat$var[1] %>% as.character))+"
"0","      facet_wrap(~ var) +"
"0","      theme_bw() %+replace% theme(legend.position = ""top"", legend.key.width =  unit(1, 'cm'), plot.title = element_text(hjust=0.5), strip.background = element_blank(), strip.text = element_blank())"
"0","      })"
"0","  "
"0","  # Wrap ggplot list"
"0","  wrap_plots(gg_list)"
"0","}"
